@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 0 0% 3%;
    --foreground: 0 0% 98%;

    --card: 0 0% 7%;
    --card-foreground: 0 0% 98%;

    --popover: 0 0% 10%;
    --popover-foreground: 0 0% 98%;

    --primary: 130 100% 50%;
    --primary-foreground: 0 0% 7%;

    --secondary: 0 0% 15%;
    --secondary-foreground: 0 0% 98%;

    --muted: 0 0% 20%;
    --muted-foreground: 0 0% 70%;

    --accent: 270 100% 50%;
    --accent-foreground: 0 0% 98%;

    --destructive: 350 100% 50%;
    --destructive-foreground: 0 0% 98%;

    --border: 0 0% 20%;
    --input: 0 0% 15%;
    --ring: 130 100% 50%;

    --radius: 1.5rem;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-cyber-black text-foreground overflow-x-hidden;
    font-family: monospace;
  }

  ::selection {
    @apply bg-white text-cyber-black;
  }
}

@layer components {
  .cyber-border {
    @apply border border-white shadow-[0_0_10px_rgba(255,255,255,0.5)];
  }
  
  .cyber-text {
    @apply text-white tracking-wider;
  }
  
  .cyber-bg {
    @apply bg-cyber-black bg-opacity-80 backdrop-blur-lg;
  }
  
  .cyber-pill {
    @apply relative px-6 py-3 rounded-full cyber-border bg-cyber-black bg-opacity-80 backdrop-blur transition-all duration-300;
  }
  
  .terminal-text {
    @apply font-mono tracking-wide;
  }
  
  .grid-lines {
    background-size: 50px 50px;
    background-image:
      linear-gradient(to right, rgba(255, 255, 255, 0.05) 1px, transparent 1px),
      linear-gradient(to bottom, rgba(255, 255, 255, 0.05) 1px, transparent 1px);
  }

  /* Multicolored border styles with glow effects */
  .multicolor-border-purple-blue {
    @apply relative border border-transparent;
    background: 
      linear-gradient(to right, #0A0A0A, #0A0A0A) padding-box,
      linear-gradient(to right, #9D00FF, #00C3FF) border-box;
    box-shadow: 0 0 15px rgba(157, 0, 255, 0.5), 0 0 15px rgba(0, 195, 255, 0.5);
  }

  .multicolor-border-orange-pink {
    @apply relative border border-transparent;
    background: 
      linear-gradient(to right, #0A0A0A, #0A0A0A) padding-box,
      linear-gradient(to right, #FF6B00, #FF003C) border-box;
    box-shadow: 0 0 15px rgba(255, 107, 0, 0.5), 0 0 15px rgba(255, 0, 60, 0.5);
  }

  .multicolor-border-teal-green {
    @apply relative border border-transparent;
    background: 
      linear-gradient(to right, #0A0A0A, #0A0A0A) padding-box,
      linear-gradient(to right, #00FFD1, #00FF41) border-box;
    box-shadow: 0 0 15px rgba(0, 255, 209, 0.5), 0 0 15px rgba(0, 255, 65, 0.5);
  }

  .multicolor-border-blue-purple {
    @apply relative border border-transparent;
    background: 
      linear-gradient(to right, #0A0A0A, #0A0A0A) padding-box,
      linear-gradient(to right, #00C3FF, #D946EF) border-box;
    box-shadow: 0 0 15px rgba(0, 195, 255, 0.5), 0 0 15px rgba(217, 70, 239, 0.5);
  }
  
  /* Noise overlay for old TV effect */
  .noise {
    background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noise'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.65' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noise)' opacity='1'/%3E%3C/svg%3E");
    background-repeat: repeat;
    animation: noise 0.2s infinite alternate-reverse;
  }
  
  /* Sharper noise overlay with higher contrast and finer grain */
  .noise-sharp {
    background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noise'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.8' numOctaves='4' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noise)' opacity='1'/%3E%3C/svg%3E");
    background-repeat: repeat;
    background-size: 150px 150px;
    animation: noise-sharp 0.15s steps(2) infinite;
  }

  @keyframes noise {
    0% {
      transform: translate(0, 0);
    }
    10% {
      transform: translate(-1px, 1px);
    }
    20% {
      transform: translate(1px, 1px);
    }
    30% {
      transform: translate(-1px, -1px);
    }
    40% {
      transform: translate(1px, 0);
    }
    50% {
      transform: translate(-1px, 1px);
    }
    60% {
      transform: translate(-1px, 1px);
    }
    70% {
      transform: translate(1px, -1px);
    }
    80% {
      transform: translate(-1px, -1px);
    }
    90% {
      transform: translate(1px, 1px);
    }
    100% {
      transform: translate(0, 0);
    }
  }
  
  @keyframes noise-sharp {
    0% {
      transform: translate(0, 0);
    }
    10% {
      transform: translate(-2px, 1px);
    }
    20% {
      transform: translate(2px, 1px);
    }
    30% {
      transform: translate(-1px, -2px);
    }
    40% {
      transform: translate(1px, 0);
    }
    50% {
      transform: translate(-2px, 2px);
    }
    60% {
      transform: translate(-1px, 1px);
    }
    70% {
      transform: translate(3px, -1px);
    }
    80% {
      transform: translate(-2px, -2px);
    }
    90% {
      transform: translate(2px, 2px);
    }
    100% {
      transform: translate(0, 0);
    }
  }
}

/* Overrides and custom elements */
::-webkit-scrollbar {
  width: 5px;
}

::-webkit-scrollbar-track {
  @apply bg-cyber-black bg-opacity-50;
}

::-webkit-scrollbar-thumb {
  @apply bg-white bg-opacity-30 rounded-full;
}

::-webkit-scrollbar-thumb:hover {
  @apply bg-white bg-opacity-50;
}

input::placeholder {
  @apply text-white text-opacity-40;
}

.scrollbar-none {
  -ms-overflow-style: none;
  scrollbar-width: none;
}

.scrollbar-none::-webkit-scrollbar {
  display: none;
}

.glitch-overlay::before {
  content: "";
  @apply absolute top-0 left-0 w-full h-full;
  background: repeating-linear-gradient(
    0deg,
    rgba(0, 0, 0, 0.15),
    rgba(0, 0, 0, 0.15) 1px,
    transparent 1px,
    transparent 2px
  );
  pointer-events: none;
}
